<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- <context:component-scan base-package="app">
		<context:exclude-filter type="assignable" expression="app.config.SpringAutoAppConfig"/>
		<context:exclude-filter type="assignable" expression="app.config.SpringAppConfig"/>
	</context:component-scan>
	 -->
	
	<bean id="logAroundAdvice" class="app.aop.advice.LogAroundAdvice"/>
	
	<bean id="logBeforeAdvice" class="app.aop.advice.LogBeforeAdvice"/>

	<bean id="classicPointCut" class="org.springframework.aop.support.NameMatchMethodPointcut">
		<property name="mappedName" value="findMember"></property>
	</bean>
	
	<bean id="proxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="memberService"/>
		<property name="interceptorNames">
			<list>
				<value>classicAroundAdvisor</value>
				<value>logBeforeAdvice</value>
			</list>
		</property>
	</bean>
	
	<bean id="classicAroundAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="logAroundAdvice"></property>
		<property name="pointcut" ref="classicPointCut"></property>
	</bean>
	
	<bean id="memberService" class="app.member.service.MemberServiceImpl">
		<constructor-arg name="" ref="memberRepository"></constructor-arg>
		<property name="prefix" value="aaa"></property>
	</bean>
	
	<bean id="memberRepository" class="app.member.repository.MemoryMemberRepository"></bean>
	
	<!-- 
	<bean id="numberOfItemsPolicy" class="app.order.policy.NumberOfItemsPolicy"></bean>
	
	<bean id="totalNumberPolicy" class="app.order.policy.TotalNumberPolicy"></bean>
	
	<bean id="totalPricePolicy" class="app.order.policy.TotalPricePolicy"></bean>
	
	<alias name="totalNumberPolicy" alias="shippingFeePolicy"></alias>
	
	<bean id="orderService" class="app.order.service.OrderServiceImpl">
		<constructor-arg name="memberRepository" ref="memberRepository">
		</constructor-arg>
		<constructor-arg name="shippingFeePolicy" ref="shippingFeePolicy">
		</constructor-arg>
	</bean>
	 -->
</beans>